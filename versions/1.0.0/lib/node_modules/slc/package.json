{
  "name": "slc",
  "version": "1.2.0",
  "description": "Strongloop node command line",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/strongloop/slc.git"
  },
  "author": "",
  "license": "...",
  "readmeFilename": "README.md",
  "bin": {
    "slnode": "./bin/slc",
    "slc": "./bin/slc"
  },
  "scripts": {
    "lint": "./node_modules/.bin/jshint --exclude test/sandbox *.js lib test",
    "docs": "./node_modules/.bin/sdocs --out docs",
    "test": "./node_modules/.bin/mocha --reporter list"
  },
  "dependencies": {
    "npm": "git+ssh://git@github.com:strongloop/npm.git",
    "nodefly-register": "git+ssh://git@github.com:NodeFly/nodefly-register.git",
    "slc-create": "git+ssh://git@github.com:strongloop/slc-create.git#strongloopsuite-1.0.0-5",
    "async": "~0.2.9",
    "commander": "~1.1.1",
    "ini": "~1.1.0",
    "json-file-plus": "git+ssh://git@github.com:stdarg/node-json-file.git",
    "optimist": "~0.5.0",
    "node-inspector": "~0.4.0",
    "opener": "~1.3.0",
    "prompt": "~0.2.11",
    "is2": "~0.0.3",
    "debug": "~0.7.2",
    "colors": "~0.6.1",
    "read": "~1.0.5",
    "inflection": "~1.2.6",
    "loopback-workspace": "~1.0.0",
    "mkdirp": "~0.3.5",
    "which": "~1.0.5"
  },
  "devDependencies": {
    "automation": "git+ssh://git@github.com:strongloop/automation.git",
    "jshint": "~2.1.9",
    "mocha": "~1.12.0",
    "chai": "latest",
    "nexpect": "git://github.com/strongloop/nexpect.git#spawn-env",
    "npm-registry-mock": "latest",
    "fs.extra": "latest",
    "strong-docs": "strongloop/strong-docs"
  },
  "readme": "# slc\n\n`slc` is a tool for StrongNode development.\n\n## Install\n\n[StrongNode](http://strongloop.com/products#downloads) includes `slc` and other\ntools for developing with `Node.js`.\n\n## Hello World\n\nThe following program will print `hello world` to the console and exit.\n\n    console.log('hello world');\n    \nSave the above as `hello-world.js` and run the following command:\n\n    $ slc hello-world\n    \nThis will run the `hello-world.js` script with `StrongLoop Node` and output:\n\n    hello world\n    \n## Create a Simple Program\n\n`slc`'s `create` command allows you to generate conventional `Node.js`\nboilerplate for modules and entire programs.\n\nTo generate a console program issue the following `slc` command:\n\n    $ slc create cli my-console-program\n\nThe program will be available to your terminal as a command:\n\n    $ ./my-console-program/bin/my-console-program\n\nThis command will output:\n\n    hello from my-console-program\n\n## Create a Simple Web App\n\nThe `create` command supports several program types. The following generates the boilerplate for a web app.\n\n    $ slc create web my-app\n    \nBy default, the generated web app will contain the following:\n\n- `package.json`: dependencies and other package configuration\n- `app.js`: app entry point and runtime configuration\n- `public/`: static assets available over http\n- `routes/`: route handler functions\n- `views/`: templates for rendering html\n \n## Adding Modules\n\nA module is a JavaScript file with a single distinct purpose. It should\naccept some form of input, and generate meaningful output preferably with an\nasynchronous api.\n\nWell designed modules often require a significant amount of boilerplate. This is\ngenerated for you with the following command:\n    \n    $ slc create module my-module\n    \nThis will generate a module in the lib folder `./lib/my-module.js`.\n\nThis command also supports automatically generating tests.\n\n    $ slc create module my-module --test\n\nIt also allows you to supply a stream type to implement. This will generate the\nmethods required by the specified [streams2](http://nodejs.org/api/stream.html) interface.\n\n - [readable](http://nodejs.org/api/stream.html#stream_class_stream_readable)\n - [writeable](http://nodejs.org/api/stream.html#stream_class_stream_writable)\n - [duplex](http://nodejs.org/api/stream.html#stream_class_stream_duplex)\n - [transform](http://nodejs.org/api/stream.html#stream_class_stream_transform)\n\n```sh\n$ slc create module my-module --stream transform\n```\n\nFor more information see the help for the create command.\n\n    $ slc create -h\n\n",
  "bugs": {
    "url": "https://github.com/strongloop/slc/issues"
  },
  "_id": "slc@1.2.0",
  "dist": {
    "shasum": "53be91ac6d4ed5e5f02660f04f7b217202471990"
  },
  "_resolved": "git+ssh://git@github.com:strongloop/slc#9f6ed13b108234078d62fdd9c86d063b3b2a2e99",
  "_from": "git+ssh://git@github.com:strongloop/slc#strongloopsuite-1.0.0-5",
  "_fromGithub": true
}
