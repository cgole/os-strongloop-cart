
process.nextTick = setImmediate;

var collection = require('./index.js').collection('test'),
    cluster = require('cluster');

collection.configure({ expireKeys: 1 });
    
if (cluster.isMaster) {
  cluster.fork()//.on('message', console.log);;
  cluster.fork()//.on('message', console.log);;
  cluster.fork()//.on('message', console.log);;
  cluster.fork()//.on('message', console.log);;
console.log(cluster.workers);

  //process.on('message', console.log);
} 
function test(key) {
  collection.acquire(key, function(err, lock, value) {
    if (err)
      throw err;
      
    if (value)
      ++ value;
    else
      value = 1;
      
    lock.set(value);
    if (!(value%1000)) {
    console.log(key, value);
    }
    lock.release();
    
    test(key);
  });
}

//collection.del('boo!');

test(0);
test(process.pid);
